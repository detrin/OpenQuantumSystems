using Test
using OpenQuantumSystems
using LinearAlgebra
using SparseArrays

@testset "aggregate" begin

    D(op1::Array, op2::Array) = abs(norm(op1 - op2))

    mode1 = Mode(0.2, 1.)
    mode2 = Mode(0.4, 1.)
    Energy = [0., 200.]
    mol1 = Molecule([mode1, mode2], 3, Energy)
    mol2 = Molecule([mode1, mode2], 3, Energy)
    agg = Aggregate([mol1, mol2])

    @test getNvib(agg) == [[3, 3], [3, 3]]
    @test electronicIndices(agg) == [[1, 1], [2, 1], [1, 2]]

    vibInds = [[[1, 1], [1, 1]], [[1, 1], [1, 2]], [[1, 1], [1, 3]], [[1, 1], 
        [2, 1]], [[1, 1], [2, 2]], [[1, 1], [2, 3]], [[1, 1], [3, 1]], [[1, 1], 
        [3, 2]], [[1, 1], [3, 3]], [[1, 2], [1, 1]], [[1, 2], [1, 2]], [[1, 2], 
        [1, 3]], [[1, 2], [2, 1]], [[1, 2], [2, 2]], [[1, 2], [2, 3]], [[1, 2], 
        [3, 1]], [[1, 2], [3, 2]], [[1, 2], [3, 3]], [[1, 3], [1, 1]], [[1, 3], 
        [1, 2]], [[1, 3], [1, 3]], [[1, 3], [2, 1]], [[1, 3], [2, 2]], [[1, 3], 
        [2, 3]], [[1, 3], [3, 1]], [[1, 3], [3, 2]], [[1, 3], [3, 3]], [[2, 1], 
        [1, 1]], [[2, 1], [1, 2]], [[2, 1], [1, 3]], [[2, 1], [2, 1]], [[2, 1], 
        [2, 2]], [[2, 1], [2, 3]], [[2, 1], [3, 1]], [[2, 1], [3, 2]], [[2, 1], 
        [3, 3]], [[2, 2], [1, 1]], [[2, 2], [1, 2]], [[2, 2], [1, 3]], [[2, 2], 
        [2, 1]], [[2, 2], [2, 2]], [[2, 2], [2, 3]], [[2, 2], [3, 1]], [[2, 2], 
        [3, 2]], [[2, 2], [3, 3]], [[2, 3], [1, 1]], [[2, 3], [1, 2]], [[2, 3], 
        [1, 3]], [[2, 3], [2, 1]], [[2, 3], [2, 2]], [[2, 3], [2, 3]], [[2, 3], 
        [3, 1]], [[2, 3], [3, 2]], [[2, 3], [3, 3]], [[3, 1], [1, 1]], [[3, 1], 
        [1, 2]], [[3, 1], [1, 3]], [[3, 1], [2, 1]], [[3, 1], [2, 2]], [[3, 1], 
        [2, 3]], [[3, 1], [3, 1]], [[3, 1], [3, 2]], [[3, 1], [3, 3]], [[3, 2], 
        [1, 1]], [[3, 2], [1, 2]], [[3, 2], [1, 3]], [[3, 2], [2, 1]], [[3, 2], 
        [2, 2]], [[3, 2], [2, 3]], [[3, 2], [3, 1]], [[3, 2], [3, 2]], [[3, 2], 
        [3, 3]], [[3, 3], [1, 1]], [[3, 3], [1, 2]], [[3, 3], [1, 3]], [[3, 3], 
        [2, 1]], [[3, 3], [2, 2]], [[3, 3], [2, 3]], [[3, 3], [3, 1]], [[3, 3], 
        [3, 2]], [[3, 3], [3, 3]]]
    @test vibrationalIndices(agg) == vibInds

    aggInds = [
        [[1, 1], [[1, 1], [1, 1]]], [[1, 1], [[1, 1], [1, 2]]], [[1, 1], [[1, 1], [1, 3]]], 
        [[1, 1], [[1, 1], [2, 1]]], [[1, 1], [[1, 1], [2, 2]]], [[1, 1], [[1, 1], [2, 3]]], 
        [[1, 1], [[1, 1], [3, 1]]], [[1, 1], [[1, 1], [3, 2]]], [[1, 1], [[1, 1], [3, 3]]], 
        [[1, 1], [[1, 2], [1, 1]]], [[1, 1], [[1, 2], [1, 2]]], [[1, 1], [[1, 2], [1, 3]]], 
        [[1, 1], [[1, 2], [2, 1]]], [[1, 1], [[1, 2], [2, 2]]], [[1, 1], [[1, 2], [2, 3]]], 
        [[1, 1], [[1, 2], [3, 1]]], [[1, 1], [[1, 2], [3, 2]]], [[1, 1], [[1, 2], [3, 3]]], 
        [[1, 1], [[1, 3], [1, 1]]], [[1, 1], [[1, 3], [1, 2]]], [[1, 1], [[1, 3], [1, 3]]], 
        [[1, 1], [[1, 3], [2, 1]]], [[1, 1], [[1, 3], [2, 2]]], [[1, 1], [[1, 3], [2, 3]]], 
        [[1, 1], [[1, 3], [3, 1]]], [[1, 1], [[1, 3], [3, 2]]], [[1, 1], [[1, 3], [3, 3]]], 
        [[1, 1], [[2, 1], [1, 1]]], [[1, 1], [[2, 1], [1, 2]]], [[1, 1], [[2, 1], [1, 3]]], 
        [[1, 1], [[2, 1], [2, 1]]], [[1, 1], [[2, 1], [2, 2]]], [[1, 1], [[2, 1], [2, 3]]], 
        [[1, 1], [[2, 1], [3, 1]]], [[1, 1], [[2, 1], [3, 2]]], [[1, 1], [[2, 1], [3, 3]]], 
        [[1, 1], [[2, 2], [1, 1]]], [[1, 1], [[2, 2], [1, 2]]], [[1, 1], [[2, 2], [1, 3]]], 
        [[1, 1], [[2, 2], [2, 1]]], [[1, 1], [[2, 2], [2, 2]]], [[1, 1], [[2, 2], [2, 3]]], 
        [[1, 1], [[2, 2], [3, 1]]], [[1, 1], [[2, 2], [3, 2]]], [[1, 1], [[2, 2], [3, 3]]], 
        [[1, 1], [[2, 3], [1, 1]]], [[1, 1], [[2, 3], [1, 2]]], [[1, 1], [[2, 3], [1, 3]]], 
        [[1, 1], [[2, 3], [2, 1]]], [[1, 1], [[2, 3], [2, 2]]], [[1, 1], [[2, 3], [2, 3]]], 
        [[1, 1], [[2, 3], [3, 1]]], [[1, 1], [[2, 3], [3, 2]]], [[1, 1], [[2, 3], [3, 3]]], 
        [[1, 1], [[3, 1], [1, 1]]], [[1, 1], [[3, 1], [1, 2]]], [[1, 1], [[3, 1], [1, 3]]], 
        [[1, 1], [[3, 1], [2, 1]]], [[1, 1], [[3, 1], [2, 2]]], [[1, 1], [[3, 1], [2, 3]]], 
        [[1, 1], [[3, 1], [3, 1]]], [[1, 1], [[3, 1], [3, 2]]], [[1, 1], [[3, 1], [3, 3]]], 
        [[1, 1], [[3, 2], [1, 1]]], [[1, 1], [[3, 2], [1, 2]]], [[1, 1], [[3, 2], [1, 3]]], 
        [[1, 1], [[3, 2], [2, 1]]], [[1, 1], [[3, 2], [2, 2]]], [[1, 1], [[3, 2], [2, 3]]], 
        [[1, 1], [[3, 2], [3, 1]]], [[1, 1], [[3, 2], [3, 2]]], [[1, 1], [[3, 2], [3, 3]]], 
        [[1, 1], [[3, 3], [1, 1]]], [[1, 1], [[3, 3], [1, 2]]], [[1, 1], [[3, 3], [1, 3]]], 
        [[1, 1], [[3, 3], [2, 1]]], [[1, 1], [[3, 3], [2, 2]]], [[1, 1], [[3, 3], [2, 3]]], 
        [[1, 1], [[3, 3], [3, 1]]], [[1, 1], [[3, 3], [3, 2]]], [[1, 1], [[3, 3], [3, 3]]], 
        [[2, 1], [[1, 1], [1, 1]]], [[2, 1], [[1, 1], [1, 2]]], [[2, 1], [[1, 1], [1, 3]]], 
        [[2, 1], [[1, 1], [2, 1]]], [[2, 1], [[1, 1], [2, 2]]], [[2, 1], [[1, 1], [2, 3]]], 
        [[2, 1], [[1, 1], [3, 1]]], [[2, 1], [[1, 1], [3, 2]]], [[2, 1], [[1, 1], [3, 3]]], 
        [[2, 1], [[1, 2], [1, 1]]], [[2, 1], [[1, 2], [1, 2]]], [[2, 1], [[1, 2], [1, 3]]], 
        [[2, 1], [[1, 2], [2, 1]]], [[2, 1], [[1, 2], [2, 2]]], [[2, 1], [[1, 2], [2, 3]]], 
        [[2, 1], [[1, 2], [3, 1]]], [[2, 1], [[1, 2], [3, 2]]], [[2, 1], [[1, 2], [3, 3]]], 
        [[2, 1], [[1, 3], [1, 1]]], [[2, 1], [[1, 3], [1, 2]]], [[2, 1], [[1, 3], [1, 3]]], 
        [[2, 1], [[1, 3], [2, 1]]], [[2, 1], [[1, 3], [2, 2]]], [[2, 1], [[1, 3], [2, 3]]], 
        [[2, 1], [[1, 3], [3, 1]]], [[2, 1], [[1, 3], [3, 2]]], [[2, 1], [[1, 3], [3, 3]]], 
        [[2, 1], [[2, 1], [1, 1]]], [[2, 1], [[2, 1], [1, 2]]], [[2, 1], [[2, 1], [1, 3]]], 
        [[2, 1], [[2, 1], [2, 1]]], [[2, 1], [[2, 1], [2, 2]]], [[2, 1], [[2, 1], [2, 3]]], 
        [[2, 1], [[2, 1], [3, 1]]], [[2, 1], [[2, 1], [3, 2]]], [[2, 1], [[2, 1], [3, 3]]], 
        [[2, 1], [[2, 2], [1, 1]]], [[2, 1], [[2, 2], [1, 2]]], [[2, 1], [[2, 2], [1, 3]]], 
        [[2, 1], [[2, 2], [2, 1]]], [[2, 1], [[2, 2], [2, 2]]], [[2, 1], [[2, 2], [2, 3]]], 
        [[2, 1], [[2, 2], [3, 1]]], [[2, 1], [[2, 2], [3, 2]]], [[2, 1], [[2, 2], [3, 3]]], 
        [[2, 1], [[2, 3], [1, 1]]], [[2, 1], [[2, 3], [1, 2]]], [[2, 1], [[2, 3], [1, 3]]], 
        [[2, 1], [[2, 3], [2, 1]]], [[2, 1], [[2, 3], [2, 2]]], [[2, 1], [[2, 3], [2, 3]]], 
        [[2, 1], [[2, 3], [3, 1]]], [[2, 1], [[2, 3], [3, 2]]], [[2, 1], [[2, 3], [3, 3]]], 
        [[2, 1], [[3, 1], [1, 1]]], [[2, 1], [[3, 1], [1, 2]]], [[2, 1], [[3, 1], [1, 3]]], 
        [[2, 1], [[3, 1], [2, 1]]], [[2, 1], [[3, 1], [2, 2]]], [[2, 1], [[3, 1], [2, 3]]], 
        [[2, 1], [[3, 1], [3, 1]]], [[2, 1], [[3, 1], [3, 2]]], [[2, 1], [[3, 1], [3, 3]]], 
        [[2, 1], [[3, 2], [1, 1]]], [[2, 1], [[3, 2], [1, 2]]], [[2, 1], [[3, 2], [1, 3]]], 
        [[2, 1], [[3, 2], [2, 1]]], [[2, 1], [[3, 2], [2, 2]]], [[2, 1], [[3, 2], [2, 3]]], 
        [[2, 1], [[3, 2], [3, 1]]], [[2, 1], [[3, 2], [3, 2]]], [[2, 1], [[3, 2], [3, 3]]], 
        [[2, 1], [[3, 3], [1, 1]]], [[2, 1], [[3, 3], [1, 2]]], [[2, 1], [[3, 3], [1, 3]]], 
        [[2, 1], [[3, 3], [2, 1]]], [[2, 1], [[3, 3], [2, 2]]], [[2, 1], [[3, 3], [2, 3]]], 
        [[2, 1], [[3, 3], [3, 1]]], [[2, 1], [[3, 3], [3, 2]]], [[2, 1], [[3, 3], [3, 3]]], 
        [[1, 2], [[1, 1], [1, 1]]], [[1, 2], [[1, 1], [1, 2]]], [[1, 2], [[1, 1], [1, 3]]], 
        [[1, 2], [[1, 1], [2, 1]]], [[1, 2], [[1, 1], [2, 2]]], [[1, 2], [[1, 1], [2, 3]]], 
        [[1, 2], [[1, 1], [3, 1]]], [[1, 2], [[1, 1], [3, 2]]], [[1, 2], [[1, 1], [3, 3]]], 
        [[1, 2], [[1, 2], [1, 1]]], [[1, 2], [[1, 2], [1, 2]]], [[1, 2], [[1, 2], [1, 3]]], 
        [[1, 2], [[1, 2], [2, 1]]], [[1, 2], [[1, 2], [2, 2]]], [[1, 2], [[1, 2], [2, 3]]], 
        [[1, 2], [[1, 2], [3, 1]]], [[1, 2], [[1, 2], [3, 2]]], [[1, 2], [[1, 2], [3, 3]]], 
        [[1, 2], [[1, 3], [1, 1]]], [[1, 2], [[1, 3], [1, 2]]], [[1, 2], [[1, 3], [1, 3]]], 
        [[1, 2], [[1, 3], [2, 1]]], [[1, 2], [[1, 3], [2, 2]]], [[1, 2], [[1, 3], [2, 3]]], 
        [[1, 2], [[1, 3], [3, 1]]], [[1, 2], [[1, 3], [3, 2]]], [[1, 2], [[1, 3], [3, 3]]], 
        [[1, 2], [[2, 1], [1, 1]]], [[1, 2], [[2, 1], [1, 2]]], [[1, 2], [[2, 1], [1, 3]]], 
        [[1, 2], [[2, 1], [2, 1]]], [[1, 2], [[2, 1], [2, 2]]], [[1, 2], [[2, 1], [2, 3]]], 
        [[1, 2], [[2, 1], [3, 1]]], [[1, 2], [[2, 1], [3, 2]]], [[1, 2], [[2, 1], [3, 3]]], 
        [[1, 2], [[2, 2], [1, 1]]], [[1, 2], [[2, 2], [1, 2]]], [[1, 2], [[2, 2], [1, 3]]], 
        [[1, 2], [[2, 2], [2, 1]]], [[1, 2], [[2, 2], [2, 2]]], [[1, 2], [[2, 2], [2, 3]]], 
        [[1, 2], [[2, 2], [3, 1]]], [[1, 2], [[2, 2], [3, 2]]], [[1, 2], [[2, 2], [3, 3]]], 
        [[1, 2], [[2, 3], [1, 1]]], [[1, 2], [[2, 3], [1, 2]]], [[1, 2], [[2, 3], [1, 3]]], 
        [[1, 2], [[2, 3], [2, 1]]], [[1, 2], [[2, 3], [2, 2]]], [[1, 2], [[2, 3], [2, 3]]], 
        [[1, 2], [[2, 3], [3, 1]]], [[1, 2], [[2, 3], [3, 2]]], [[1, 2], [[2, 3], [3, 3]]], 
        [[1, 2], [[3, 1], [1, 1]]], [[1, 2], [[3, 1], [1, 2]]], [[1, 2], [[3, 1], [1, 3]]], 
        [[1, 2], [[3, 1], [2, 1]]], [[1, 2], [[3, 1], [2, 2]]], [[1, 2], [[3, 1], [2, 3]]], 
        [[1, 2], [[3, 1], [3, 1]]], [[1, 2], [[3, 1], [3, 2]]], [[1, 2], [[3, 1], [3, 3]]], 
        [[1, 2], [[3, 2], [1, 1]]], [[1, 2], [[3, 2], [1, 2]]], [[1, 2], [[3, 2], [1, 3]]], 
        [[1, 2], [[3, 2], [2, 1]]], [[1, 2], [[3, 2], [2, 2]]], [[1, 2], [[3, 2], [2, 3]]], 
        [[1, 2], [[3, 2], [3, 1]]], [[1, 2], [[3, 2], [3, 2]]], [[1, 2], [[3, 2], [3, 3]]], 
        [[1, 2], [[3, 3], [1, 1]]], [[1, 2], [[3, 3], [1, 2]]], [[1, 2], [[3, 3], [1, 3]]], 
        [[1, 2], [[3, 3], [2, 1]]], [[1, 2], [[3, 3], [2, 2]]], [[1, 2], [[3, 3], [2, 3]]], 
        [[1, 2], [[3, 3], [3, 1]]], [[1, 2], [[3, 3], [3, 2]]], [[1, 2], [[3, 3], [3, 3]]]]
    @test getIndices(agg) == aggInds

    mode1 = Mode(0.2, 1.)
    Energy = [0., 200.]
    mol1 = Molecule([mode1], 2, Energy)
    mol2 = Molecule([mode1], 2, Energy)
    agg = Aggregate([mol1, mol2])
    aggInds = getIndices(agg)
    FC_part = getFranckCondonFactors(agg; groundState=false)
    FC1 = getFranckCondonFactors(agg)
    FC2 = getFranckCondonFactors(agg, aggInds)

    @test size(FC1) == (12, 12)
    @test size(FC_part) == (8, 8)
    @test FC1 == FC2
    @test FC_part == FC1[5:12, 5:12]
    FC = [
        1.0 0.0 0.0 0.0 0.6065306597126334 0.42888194248035344 -0.42888194248035333 -0.3032653298563167; 
        0.0 1.0 0.0 0.0 -0.42888194248035333 0.30326532985631666 0.30326532985631666 -0.21444097124017664; 
        0.0 0.0 1.0 0.0 0.42888194248035344 0.30326532985631677 0.30326532985631666 0.2144409712401767; 
        0.0 0.0 0.0 1.0 -0.3032653298563167 0.2144409712401767 -0.21444097124017664 0.15163266492815833; 
        0.6065306597126334 -0.42888194248035333 0.42888194248035344 -0.3032653298563167 1.0 0.0 0.0 0.0; 
        0.42888194248035344 0.30326532985631666 0.30326532985631677 0.2144409712401767 0.0 1.0 0.0 0.0; 
        -0.42888194248035333 0.30326532985631666 0.30326532985631666 -0.21444097124017664 0.0 0.0 1.0 0.0; 
        -0.3032653298563167 -0.21444097124017664 0.2144409712401767 0.15163266492815833 0.0 0.0 0.0 1.0
    ]
    @test 1e-12 > D(FC_part, FC)

    @test getAggStateEnergy(agg, [1, 1], [[1], [2]]) == 0.4

    @test getAggStateEnergy(agg, [1, 1], [[1], [2]]) == 0.4

    @test OpenQuantumSystems.elIndOrder([1, 1, 1]) == 1
    @test OpenQuantumSystems.elIndOrder([1, 1, 2]) == 2
    @test OpenQuantumSystems.elIndOrder([2, 1, 1]) == 4

    aggInds = getIndices(agg; groundState=false)
    agg.coupling[2, 3] = 200
    agg.coupling[3, 2] = 200    
    Ham_ref = [
        0.0 0.0 0.0 0.0 121.30613194252669 85.7763884960707 -85.77638849607067 -60.653065971263345; 
        0.0 0.20000000000001705 0.0 0.0 -85.77638849607067 60.65306597126333 60.65306597126333 -42.888194248035326; 
        0.0 0.0 0.20000000000001705 0.0 85.7763884960707 60.65306597126335 60.65306597126333 42.88819424803534; 
        0.0 0.0 0.0 0.4000000000000341 -60.653065971263345 42.88819424803534 -42.888194248035326 30.326532985631665; 
        121.30613194252669 -85.77638849607067 85.7763884960707 -60.653065971263345 0.0 0.0 0.0 0.0; 
        85.7763884960707 60.65306597126333 60.65306597126335 42.88819424803534 0.0 0.20000000000001705 0.0 0.0; 
        -85.77638849607067 60.65306597126333 60.65306597126333 -42.888194248035326 0.0 0.0 0.20000000000001705 0.0; 
        -60.653065971263345 -42.888194248035326 42.88819424803534 30.326532985631665 0.0 0.0 0.0 0.4000000000000341
    ]
    Ham1 = getAggHamiltonian(agg, aggInds, FC_part; groundState=false)
    Ham2 = getAggHamiltonian(agg, aggInds; groundState=false)
    Ham3 = getAggHamiltonian(agg; groundState=false)

    @test 1e-12 > D(Ham_ref, Ham1.data)
    @test 1e-12 > D(Ham_ref, Ham2.data)
    @test 1e-12 > D(Ham_ref, Ham3.data)

    FCSparse = getFranckCondonFactorsSparse(agg, aggInds; groundState=false)
    @test 1e-12 > D(FC, Matrix(FCSparse))

    FCSparse = getFranckCondonFactorsSparse(agg; groundState=false)
    @test 1e-12 > D(FC, Matrix(FCSparse))

    HamSparse1 = getAggHamiltonianSparse(agg, aggInds, FCSparse; groundState=false)
    HamSparse2 = getAggHamiltonianSparse(agg, aggInds; groundState=false)
    HamSparse3 = getAggHamiltonianSparse(agg; groundState=false)
    @test 1e-12 > D(Ham_ref, Matrix(HamSparse1.data))
    @test 1e-12 > D(Ham_ref, Matrix(HamSparse2.data))
    @test 1e-12 > D(Ham_ref, Matrix(HamSparse3.data))

    agg = Aggregate([mol1, mol2])
    agg.coupling[2, 3] = 200
    agg.coupling[3, 2] = 200  
    agg2 = Aggregate([mol1, mol2], [0.0 0.0 0.0; 0.0 0.0 200.0; 0.0 200.0 0.0])
    @test agg2.coupling == agg.coupling

end